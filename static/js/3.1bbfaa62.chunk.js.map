{"version":3,"sources":["components/Content/Dialogs/units.js","components/Content/Dialogs/Dialog/units.js","components/Content/Dialogs/Dialog/index.js","components/Content/Dialogs/Messge/units.js","components/Content/Dialogs/Messge/index.js","components/Content/Dialogs/index.js","components/Content/Dialogs/dialogsContainer.js"],"names":["StyledDialogs","styled","div","DialogsItem","StyledDialog","Dialog","props","to","id","children","StyledMessage","Message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","name","Dialogs","state","dialogs","dialogsElement","dialogsData","map","d","messagesElement","messagesData","m","message","newMessageBody","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"0pBAEA,IAAMA,EAAgBC,IAAOC,IAAV,KAObC,EAAcF,IAAOC,IAAV,KASAD,IAAOC,IAAV,K,2QChBd,IAceE,EAdMH,IAAOC,IAAV,K,QCUHG,EARA,SAACC,GACZ,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,CAASC,GAAI,YAAcD,EAAME,IAAKF,EAAMG,Y,6ICLxD,IAMeC,EANOT,IAAOC,IAAV,KCKJS,EAJC,SAACL,GACb,OAAO,kBAAC,EAAD,KAAgBA,EAAMG,W,kCCyB3BG,EAAcC,YAAiB,IAe/BC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,EAdL,SAACT,GACpB,OACI,0BAAMW,SAAUX,EAAMY,cAClB,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBY,YAAa,qBACbC,KAAM,mBAEV,mDASGC,EAxCC,SAACpB,GACb,IAAIqB,EAAQrB,EAAMsB,QACdC,EAAiBF,EAAMG,YAAYC,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CAAQxB,GAAIwB,EAAExB,IAAKwB,EAAEP,SACnEQ,EAAkBN,EAAMO,aAAaH,KAAI,SAACI,GAAD,OAAO,kBAAC,EAAD,KAAUA,EAAEC,YAC3CT,EAAMU,eAM3B,OACI,kBAACrC,EAAD,KACI,kBAACG,EAAD,KAAc0B,GACd,6BACKI,EACD,kBAACnB,EAAD,CAAqBG,SATb,SAACqB,GACjBhC,EAAMiC,YAAYD,EAAOD,sB,wBCKlBG,sBAAQC,aAbD,SAACd,GACnB,MAAO,CACHC,QAASD,EAAMC,YAGE,SAACc,GACtB,MAAO,CACHH,YAAa,SAACF,GACVK,EAASC,YAAmBN,SAK6BO,IAAtDJ,CAAwEd","file":"static/js/3.1bbfaa62.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nconst StyledDialogs = styled.div`\r\n    background-color: lightblue;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n`;\r\n\r\nconst DialogsItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    & > :active {\r\n        color: red;\r\n    }\r\n`;\r\nconst Messages = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport { StyledDialogs, DialogsItem, Messages };\r\n","import styled from \"@emotion/styled\";\r\n\r\nconst StyledDialog = styled.div`\r\n    width: 100px;\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n\r\n    & > a {\r\n        color: black;\r\n        text-decoration: none;\r\n    }\r\n    & > a.active {\r\n        color: gold;\r\n    }\r\n`;\r\n\r\nexport default StyledDialog;\r\n","import React from \"react\";\r\nimport StyledDialog from \"./units\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <StyledDialog>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.children}</NavLink>\r\n        </StyledDialog>\r\n    );\r\n};\r\n\r\nexport default Dialog;\r\n","import styled from \"@emotion/styled\";\r\n\r\nconst StyledMessage = styled.div`\r\n    width: 100px;\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport default StyledMessage;\r\n","import React from \"react\";\r\nimport StyledMessage from \"./units\";\r\n\r\nconst Message = (props) => {\r\n    return <StyledMessage>{props.children}</StyledMessage>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\nimport { StyledDialogs, DialogsItem, Messages } from './units';\nimport Dialog from './Dialog';\nimport Message from './Messge';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../../common/FormsControls/FormControls';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\n\nconst Dialogs = (props) => {\n    let state = props.dialogs;\n    let dialogsElement = state.dialogsData.map((d) => <Dialog id={d.id}>{d.name}</Dialog>);\n    let messagesElement = state.messagesData.map((m) => <Message>{m.message}</Message>);\n    let newMessageBody = state.newMessageBody;\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    };\n\n    return (\n        <StyledDialogs>\n            <DialogsItem>{dialogsElement}</DialogsItem>\n            <div>\n                {messagesElement}\n                <AddMessageFormRedux onSubmit={addNewMessage} />\n            </div>\n        </StyledDialogs>\n    );\n};\n\nconst maxLength50 = maxLengthCreator(50);\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field\n                component={Textarea}\n                validate={[required, maxLength50]}\n                placeholder={'Enter your message'}\n                name={'newMessageBody'}\n            />\n            <button>add message</button>\n        </form>\n    );\n};\n\nconst AddMessageFormRedux = reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm);\n\nexport default Dialogs;\n","import { sendMessageCreator } from '../../../redux/dialogs-reducer';\nimport Dialogs from './index';\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogs\n    };\n};\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\n"],"sourceRoot":""}