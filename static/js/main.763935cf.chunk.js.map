{"version":3,"sources":["redux/dialogs-reducer.js","asses/images/user.png","hoc/withAuthRedirect.js","api/api.js","serviceWorker.js","components/Content/units.js","components/Content/Catalog/units.js","components/Content/Catalog/index.js","components/Content/News/units.js","components/Content/News/index.js","components/Content/Setting/units.js","components/Content/Setting/index.js","utils/validators/object-helpers.js","redux/users-reducer.js","components/Content/Users/units.js","components/common/Paginator/unitsPaginator.js","components/common/Paginator/Paginator.js","components/Content/Users/User.js","components/Content/Users/index.js","redux/users-selectors.js","components/Content/Users/UsersContainer.js","redux/auth-reducer.js","components/Content/Login/LoginUnits.js","components/Content/Login/Login.js","hoc/withSuspens.js","components/Content/index.js","components/Header/units.js","components/Header/index.js","components/Header/HeaderContainer.js","redux/app-reducer.js","redux/catalog-reducer.js","redux/redux-store.js","App.js","index.js","components/common/UnitsPreloader.js","components/common/Preloader.js","components/common/FormsControls/units.js","components/common/FormsControls/FormControls.js","utils/validators/validators.js","redux/profile-reducer.js"],"names":["initialState","messagesData","id","message","dialogsData","name","sendMessageCreator","newMessageBody","type","dialogsReduser","state","action","body","module","exports","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","getProfile","userId","console","warn","ProfileAPI","unFollow","delete","follow","post","getStatus","updateStatus","status","put","authMe","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","StyledContent","styled","div","StyledCatalog","Catalog","TransformData","count","day","map","x","mon","tue","filter","y","z","log","StyledNews","News","StyledSetting","Setting","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","portionSize","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReduser","followed","StyledUsers","SelectedPage","fw","undefined","ButtonPrevious","ButtonNext","Pagination","Paginator","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","e","User","user","unfollow","src","photos","small","userPhoto","alt","disabled","some","Users","key","getUsersSuper","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","Preloader","compose","bind","page","totalCount","setAuthUserData","payload","getAuthUserData","authReduser","FormSummaryError","LoginCenter","height","Buttonlogin","button","maxLength30","maxLengthCreator","maxLength20","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","messages","length","stopSubmit","_error","formData","withSuspens","fallback","DialogsContainer","lazy","ProfileContainer","Content","path","render","StyledHeader","LoginText","Header","width","HeaderContainer","initialized","appReduser","catalogReduser","reducers","combineReducers","profile","profileReduser","dialogs","catalog","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","App","initializedApp","ContainerAPP","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","PreloaderImg","img","PreloaderCenter","TextArea","textarea","border","FormInput","input","bgCr","SomeError","span","RememberMe","FormControls","meta","touched","hasError","children","Textarea","restProps","placeholder","validate","component","text","Field","value","maxLength","postData","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost"],"mappings":"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","file":"static/js/main.763935cf.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet initialState = {\n    messagesData: [\n        { id: '1', message: 'Hello sister' },\n        { id: '2', message: \"it's a nice san day \" },\n        { id: '3', message: 'Mgfdskgjl;fdsa' },\n        { id: '4', message: 'gjdflskgj;ldfsg' },\n        { id: '5', message: 'Ivgfds;kgj;sfl' }\n    ],\n    dialogsData: [\n        { id: '1', name: 'Andrew' },\n        { id: '2', name: 'Sasha' },\n        { id: '3', name: 'Misha' },\n        { id: '4', name: 'Lena' },\n        { id: '5', name: 'Ivan' }\n    ]\n};\n\nconst dialogsReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messagesData: [...state.messagesData, { id: 6, message: body }]\n            };\n        default:\n            return state;\n    }\n};\n\nexport const sendMessageCreator = (newMessageBody) => ({\n    type: SEND_MESSAGE,\n    newMessageBody\n});\n\nexport default dialogsReduser;\n","module.exports = __webpack_public_path__ + \"static/media/user.6f99ea57.png\";","import React, { Suspense } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Preloader from '../components/common/Preloader';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\n\n            return <Component {...this.props} />;\n        }\n    }\n\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectAuthRedirectComponent;\n};\n\nexport const SuspensLazy = (props) => {\n    return <Suspense fallback={<Preloader />}>{props.children}</Suspense>;\n};\n","import * as axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '94c222ff-9d9a-43ae-8386-641782188505'\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then((response) => response.data);\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please ProfileAPI object.');\n        return ProfileAPI.getProfile(userId);\n    },\n    unFollow(id) {\n        return instance.delete(`follow/${id}`, {}).then((response) => response.data);\n    },\n    follow(id) {\n        return instance.post(`follow/${id}`, {}, {}).then((response) => response.data);\n    }\n};\n\nexport const ProfileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId).then((response) => response.data);\n    },\n    getStatus(userId) {\n        return instance.get('profile/status/' + userId).then((response) => response.data);\n    },\n    updateStatus(status) {\n        return instance.put('profile/status/', { status: status }).then((response) => response.data);\n    }\n};\n\nexport const authMe = {\n    me() {\n        return instance.get(`auth/me`).then((response) => response.data);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, { email, password, rememberMe }).then((response) => response.data);\n    },\n    logout() {\n        return instance.delete(`auth/login`).then((response) => response.data);\n    }\n};\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nconst StyledContent = styled.div`\r\n  display: flex;\r\n`;\r\nexport default StyledContent;\r\n","import styled from \"@emotion/styled\";\r\n\r\nconst StyledCatalog = styled.div`\r\n    width: 100px;\r\n    background-color: lightcoral;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 300px;\r\n    padding-top: 20px;\r\n\r\n    & > a {\r\n        color: white;\r\n        text-decoration: none;\r\n    }\r\n    & > a.active {\r\n        color: gold;\r\n    }\r\n`;\r\n\r\nexport { StyledCatalog };\r\n","import React from 'react';\nimport { StyledCatalog } from './units';\nimport { NavLink } from 'react-router-dom';\n\nconst Catalog = () => {\n    let arr1 = [\n        {\n            name: 'Vasya',\n            count: 5,\n            day: 'mon'\n        },\n        {\n            name: 'Petya',\n            count: 4,\n            day: 'mon'\n        },\n        {\n            name: 'Katya',\n            count: 2,\n            day: 'mon'\n        },\n        {\n            name: 'Vasya',\n            count: 3,\n            day: 'tue'\n        },\n        {\n            name: 'Petya',\n            count: 5,\n            day: 'tue'\n        },\n        {\n            name: 'Katya',\n            count: 1,\n            day: 'tue'\n        }\n    ];\n\n    let TransformData = arr1\n        .map((x) => {\n            return {\n                name: x.name,\n                data: {\n                    mon: x.day === 'mon' ? x.count : '',\n                    tue: x.day === 'tue' ? x.count : ''\n                }\n            };\n        })\n        .filter((y) => y.data.mon === 'mon')\n        .map((z) => {\n            return {\n                name: z.name,\n                data: {\n                    mon: z.day === 'mon'\n                }\n            };\n        });\n    console.log(TransformData);\n\n    return (\n        <StyledCatalog>\n            <NavLink to=\"/profile\">Profile</NavLink>\n            <NavLink to=\"/dialogs\">Message</NavLink>\n            <NavLink to=\"/news\">News</NavLink>\n            <NavLink to=\"/users\">Users</NavLink>\n            <NavLink to=\"/music\">Music</NavLink>\n            <NavLink to=\"/setting\">Setting</NavLink>\n        </StyledCatalog>\n    );\n};\n\nexport default Catalog;\n","import styled from \"@emotion/styled\";\r\n\r\nconst StyledNews = styled.div`\r\n  width: 100%;\r\n  background-color: red;\r\n`;\r\n\r\nexport default StyledNews;\r\n","import React from \"react\";\r\nimport StyledNews from \"./units\";\r\n\r\nconst News = () => {\r\n    return <StyledNews>News</StyledNews>;\r\n};\r\n\r\nexport default News;\r\n","import styled from \"@emotion/styled\";\r\n\r\nconst StyledSetting = styled.div`\r\n  width: 100%;\r\n  background-color: lightgrey;\r\n`;\r\n\r\nexport default StyledSetting;\r\n","import React from \"react\";\r\nimport StyledSetting from \"./units\";\r\n\r\nconst Setting = () => {\r\n    return <StyledSetting>Setting</StyledSetting>;\r\n};\r\n\r\nexport default Setting;\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map((u) => {\n        if (u[objPropName] === itemId) {\n            return { ...u, ...newObjProps };\n        }\n        return u;\n    });\n};\n","import { usersAPI } from '../api/api';\nimport { updateObjectInArray } from '../utils/validators/object-helpers';\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 50,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    portionSize: null\n};\n\nconst usersReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\n            };\n        case SET_USERS: {\n            return { ...state, users: action.users };\n        }\n        case SET_CURRENT_PAGE: {\n            return { ...state, currentPage: action.currentPage };\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return { ...state, totalUsersCount: action.count };\n        }\n        case TOGGLE_IS_FETCHING: {\n            return { ...state, isFetching: action.isFetching };\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter((id) => id != action.userId)\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n});\n\nexport const followUnfollowFlow = async (userId, dispatch, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let data = await apiMethod(userId);\n    if (data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const getUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    };\n};\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(userId), followSuccess);\n    };\n};\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(userId, dispatch, usersAPI.unFollow.bind(userId), unfollowSuccess);\n    };\n};\n\nexport default usersReduser;\n","import styled from '@emotion/styled';\n\nconst StyledUsers = styled.div`\n    width: 100%;\n    background-color: aqua;\n`;\n\nexport { StyledUsers };\n","import styled from '@emotion/styled';\n\nexport const SelectedPage = styled.div`\n    font-weight: ${({ fw }) => (fw !== undefined ? fw : '')};\n    font-family: 'Droid Sans Mono';\n    margin-right: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 25px;\n    height: 25px;\n    border-radius: 20px;\n    box-shadow: 3px 3px 5px grey;\n    background: linear-gradient(to left, #61dafb, blueviolet);\n    cursor: pointer;\n    user-select: none;\n    &:hover {\n        opacity: 0.8;\n    }\n`;\nexport const ButtonPrevious = styled.div`\n    font-family: 'Droid Sans Mono';\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 15px;\n    width: 100px;\n    height: 25px;\n    border-radius: 20px;\n    box-shadow: 3px 3px 5px grey;\n    background: linear-gradient(to left, #61dafb, blueviolet);\n    cursor: pointer;\n    user-select: none;\n    &:hover {\n        opacity: 0.8;\n    }\n`;\nexport const ButtonNext = styled.div`\n    margin-left: 10px;\n    font-family: 'Droid Sans Mono';\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 50px;\n    height: 25px;\n    border-radius: 20px;\n    box-shadow: 3px 3px 5px grey;\n    background: linear-gradient(to left, #61dafb, blueviolet);\n    cursor: pointer;\n    user-select: none;\n    &:hover {\n        opacity: 0.8;\n    }\n`;\nexport const Pagination = styled.div`\n    display: flex;\n    margin: 10px 0 30px 10px;\n`;\n","import React, { useState } from 'react';\nimport { ButtonNext, ButtonPrevious, Pagination, SelectedPage } from './unitsPaginator';\n\nconst Paginator = ({ totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    const [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n    return (\n        <Pagination>\n            {portionNumber > 1 && (\n                <ButtonPrevious\n                    onClick={() => {\n                        setPortionNumber(portionNumber - 1);\n                    }}>\n                    Previous\n                </ButtonPrevious>\n            )}\n            {pages\n                .filter((p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map((p) => {\n                    return (\n                        <SelectedPage\n                            fw={currentPage === p ? 'bold' : ''}\n                            onClick={(e) => {\n                                onPageChanged(p);\n                            }}>\n                            {p}\n                        </SelectedPage>\n                    );\n                })}\n            {portionCount > portionNumber && (\n                <ButtonNext\n                    onClick={() => {\n                        setPortionNumber(portionNumber + 1);\n                    }}>\n                    Next\n                </ButtonNext>\n            )}\n        </Pagination>\n    );\n};\n\nexport default Paginator;\n","import React from 'react';\nimport { StyledUsers } from './units';\nimport userPhoto from '../../../asses/images/user.png';\nimport { NavLink } from 'react-router-dom';\n\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\n    return (\n        <StyledUsers>\n            <div>\n                <div>\n                    <div>\n                        <NavLink to={'/profile/' + user.id}>\n                            <img src={user.photos.small !== null ? user.photos.small : userPhoto} alt=\"\" />\n                        </NavLink>\n                    </div>\n                    <div>\n                        {user.followed ? (\n                            <button\n                                disabled={followingInProgress.some((id) => id === user.id)}\n                                onClick={() => {\n                                    unfollow(user.id);\n                                }}>\n                                UnFollow\n                            </button>\n                        ) : (\n                            <button\n                                disabled={followingInProgress.some((id) => id === user.id)}\n                                onClick={() => {\n                                    follow(user.id);\n                                }}>\n                                Follow\n                            </button>\n                        )}\n                    </div>\n                </div>\n                <div>\n                    <div>\n                        <div>{user.name}</div>\n                        <div>{'user.location.country'}</div>\n                    </div>\n                    <div>{'user.location.city'}</div>\n                    <div>{user.status}</div>\n                </div>\n            </div>\n            ))}\n        </StyledUsers>\n    );\n};\n\nexport default User;\n","import React from 'react';\nimport { StyledUsers } from './units';\nimport Paginator from '../../common/Paginator/Paginator';\nimport User from './User';\n\nlet Users = (props) => {\n    return (\n        <StyledUsers>\n            <Paginator\n                currentPage={props.currentPage}\n                pageSize={props.pageSize}\n                onPageChanged={props.onPageChanged}\n                totalUsersCount={props.totalUsersCount}\n            />\n\n            {props.users.map((u) => (\n                <User\n                    user={u}\n                    key={u.id}\n                    followingInProgress={props.followingInProgress}\n                    unfollow={props.unfollow}\n                    follow={props.follow}\n                />\n            ))}\n        </StyledUsers>\n    );\n};\n\nexport default Users;\n","import React from 'react';\nimport { createSelector } from 'reselect';\n\nexport const getUsersSelect = (state) => {\n    return state.usersPage.users;\n};\n\nexport const getUsersSuper = createSelector(getUsersSelect, (users) => {\n    return users.filter((u) => true);\n});\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n};\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n};\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n};\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n};\n","import { connect } from 'react-redux';\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers } from '../../../redux/users-reducer';\nimport React from 'react';\nimport Users from './index';\nimport Preloader from '../../common/Preloader';\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersSuper\n} from '../../../redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n\n    render() {\n        return (\n            <>\n                {this.props.isFetching ? <Preloader /> : null}\n                <Users\n                    totalUsersCount={this.props.totalUsersCount}\n                    pageSize={this.props.pageSize}\n                    currentPage={this.props.currentPage}\n                    onPageChanged={this.onPageChanged}\n                    users={this.props.users}\n                    follow={this.props.follow}\n                    unfollow={this.props.unfollow}\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\n                    followingInProgress={this.props.followingInProgress}\n                />\n            </>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsersSuper(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toggleFollowingProgress,\n        getUsers\n    })\n)(UsersContainer);\n","import { authMe } from '../api/api';\nimport { stopSubmit } from 'redux-form';\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: { userId, email, login, isAuth }\n});\nexport const getAuthUserData = () => async (dispatch) => {\n    let data = await authMe.me();\n\n    if (data.resultCode === 0) {\n        let { id, login, email } = data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n};\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let data = await authMe.login(email, password, rememberMe);\n    if (data.resultCode === 0) {\n        dispatch(getAuthUserData());\n    } else {\n        let message = data.messages.length > 0 ? data.messages[0] : 'Some error';\n        dispatch(stopSubmit('login', { _error: message }));\n    }\n};\nexport const logout = () => async (dispatch) => {\n    let data = await authMe.logout();\n    if (data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n};\nexport default authReduser;\n","import styled from '@emotion/styled';\n\nexport const FormSummaryError = styled.div`\n    border: solid red 3px;\n    color: rosybrown;\n    padding: 5px;\n`;\nexport const LoginCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px auto 0 auto;\n    width: 500px;\n    height: ${(props) => (props.height === undefined ? '' : props.height)};\n    border-radius: 20px;\n    border: solid 2px white;\n    box-shadow: 3px 3px 5px grey;\n`;\nexport const Buttonlogin = styled.button`\n    font-size: 30px;\n    font-family: 'Droid Sans Mono';\n    border: none;\n    border-radius: 40px;\n    box-shadow: 3px 3px 5px grey;\n    width: 300px;\n    height: 50px;\n    background: linear-gradient(to left, #61dafb, blueviolet);\n    outline: none;\n    cursor: pointer;\n    &:hover {\n        opacity: 0.8;\n    }\n`;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { createField, Input } from '../../common/FormsControls/FormControls';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { connect } from 'react-redux';\nimport { login } from '../../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport { Buttonlogin, FormSummaryError, LoginCenter } from './LoginUnits';\n\nconst maxLength30 = maxLengthCreator(30);\nconst maxLength20 = maxLengthCreator(20);\n\nconst LoginForm = ({ handleSubmit, error }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField('Email', 'email', [required, maxLength30], Input)}\n            {createField('Password', 'password', [required, maxLength20], Input, 'password')}\n            {createField(null, 'RememberMe', null, 'input', 'checkbox', 'remember me')}\n\n            {error && <FormSummaryError>{error}</FormSummaryError>}\n            <div>\n                <Buttonlogin>Login</Buttonlogin>\n            </div>\n        </form>\n    );\n};\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm);\n\nconst Login = ({ login, isAuth, ...props }) => {\n    const onSubmit = (formData) => {\n        login(formData.email, formData.password, formData.rememberMe);\n    };\n\n    if (isAuth) {\n        return <Redirect to={'/profile'} />;\n    }\n    return (\n        <LoginCenter height={props.error ? '500px' : '400px'}>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit} />\n        </LoginCenter>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    };\n};\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Suspense } from 'react';\nimport Preloader from '../components/common/Preloader';\n\nexport const withSuspens = (Component) => {\n    return (props) => {\n        return (\n            <Suspense fallback={<Preloader />}>\n                <Component {...props} />\n            </Suspense>\n        );\n    };\n};\n","import React from 'react';\nimport StyledContent from './units';\nimport Catalog from './Catalog';\nimport News from './News';\nimport Setting from './Setting';\nimport { Route } from 'react-router-dom';\nimport UsersContainer from './Users/UsersContainer';\nimport Login from './Login/Login';\nimport { withSuspens } from '../../hoc/withSuspens';\n\nconst DialogsContainer = React.lazy(() => import('./Dialogs/dialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./Profile/ProfileContainer'));\n\nconst Content = () => {\n    return (\n        <StyledContent>\n            <Catalog />\n            <Route path=\"/dialogs\" render={withSuspens(DialogsContainer)} />\n            <Route path=\"/profile/:userId?\" render={withSuspens(ProfileContainer)} />\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n            <Route path=\"/news\" render={() => <News />} />\n            <Route path=\"/setting\" render={() => <Setting />} />\n            <Route path=\"/login\" render={() => <Login />} />\n        </StyledContent>\n    );\n};\nexport default Content;\n","import styled from '@emotion/styled';\n\nconst StyledHeader = styled.div`\n    height: 50px;\n    width: 100%;\n    background-color: green;\n    display: flex;\n    justify-content: space-between;\n`;\nconst LoginText = styled.div`\n    float: right;\n`;\n\nexport { StyledHeader, LoginText };\n","import React from 'react';\nimport { LoginText, StyledHeader } from './units';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    return (\n        <StyledHeader>\n            <div>\n                <img\n                    src=\"https://ic.pics.livejournal.com/mi3ch/983718/3671283/3671283_original.jpg\"\n                    alt=\"\"\n                    width=\"25px\"\n                    height=\"25px\"\n                />\n            </div>\n            <LoginText>\n                {props.isAuth ? (\n                    <div>\n                        {props.login} - <button onClick={props.logout}>Logout</button>\n                    </div>\n                ) : (\n                    <NavLink to={'/login'}>Login</NavLink>\n                )}\n            </LoginText>\n        </StyledHeader>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport Header from './index';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/auth-reducer';\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return <Header {...this.props} />;\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\n","import { getAuthUserData } from './auth-reducer';\n\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const initializedSuccess = () => ({\n    type: SET_INITIALIZED_SUCCESS\n});\nexport const initializedApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise]).then(() => {\n        dispatch(initializedSuccess());\n    });\n};\nexport default appReduser;\n","let initialState = {};\r\n\r\nconst catalogReduser = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default catalogReduser;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport profileReduser from './profile-reducer';\nimport dialogsReduser from './dialogs-reducer';\nimport catalogReduser from './catalog-reducer';\nimport usersReduser from './users-reducer';\nimport authReduser from './auth-reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport appReduser from './app-reducer';\n\nlet reducers = combineReducers({\n    profile: profileReduser,\n    dialogs: dialogsReduser,\n    catalog: catalogReduser,\n    usersPage: usersReduser,\n    auth: authReduser,\n    form: formReducer,\n    app: appReduser\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nwindow.__store__ = store;\n\nexport default store;\n","import React from 'react';\nimport Content from './components/Content';\nimport { BrowserRouter, withRouter } from 'react-router-dom';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializedApp } from './redux/app-reducer';\nimport Preloader from './components/common/Preloader';\nimport store from './redux/redux-store';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializedApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />;\n        }\n        return (\n            <>\n                <HeaderContainer />\n                <Content />\n            </>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst ContainerAPP = compose(withRouter, connect(mapStateToProps, { initializedApp }))(App);\n\nconst SamuraiJSApp = () => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <ContainerAPP />\n            </Provider>\n        </BrowserRouter>\n    );\n};\n\nexport default SamuraiJSApp;\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import styled from '@emotion/styled';\n\nexport const PreloaderImg = styled.img`\n    position: absolute;\n    margin: auto;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n`;\nexport const PreloaderCenter = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n","import React from 'react';\nimport { PreloaderCenter, PreloaderImg } from './UnitsPreloader';\n\nlet Preloader = () => {\n    return (\n        <PreloaderCenter>\n            <PreloaderImg\n                src=\"https://kryolan.ru/local/templates/kryolan/img/ajax-loader.gif\"\n                width=\"100px\"\n                height=\"100px\"\n                alt=\"\"\n            />\n        </PreloaderCenter>\n    );\n};\n\nexport default Preloader;\n","import styled from '@emotion/styled';\n\nexport const TextArea = styled.textarea`\n    border: ${(props) => (props.border === undefined ? '' : props.border)};\n`;\nexport const FormInput = styled.input`\n    padding-right: 50px;\n    border-radius: 20px;\n    padding-left: 15px;\n    font-size: 15px;\n    width: 230px;\n    height: 30px;\n    border: ${(props) => (props.border === undefined ? '' : props.border)};\n    background-color: ${(props) => (props.bgCr === undefined ? '' : props.bgCr)};\n    outline: none;\n\n    &::placeholder {\n        padding-left: 10px;\n        font-size: 15px;\n    }\n`;\nexport const SomeError = styled.span`\n    color: red;\n`;\nexport const RememberMe = styled.div`\n    display: flex;\n    margin-bottom: 10px;\n`;\n","import React from 'react';\nimport { FormInput, RememberMe, SomeError, TextArea } from './units';\nimport { Field } from 'redux-form';\n\nconst FormControls = ({ input, meta: { touched, error }, ...props }) => {\n    const hasError = touched && error;\n    return (\n        <div>\n            <div>{props.children}</div>\n            {hasError && <SomeError>{error}</SomeError>}\n        </div>\n    );\n};\n\nexport const Textarea = (props) => {\n    const {\n        input,\n        meta: { touched, error },\n        ...restProps\n    } = props;\n    const hasError = touched && error;\n    return (\n        <FormControls {...props} {...input}>\n            <TextArea {...restProps} {...input} border={hasError ? 'solid red 3px' : ''} />\n        </FormControls>\n    );\n};\n\nexport const Input = (props) => {\n    const {\n        input,\n        meta: { touched, error },\n        ...restProps\n    } = props;\n    const hasError = touched && error;\n\n    return (\n        <FormControls {...props} {...input}>\n            <FormInput\n                {...restProps}\n                {...input}\n                border={hasError ? 'solid red 3px' : 'solid 3px blue'}\n                bgCr={hasError ? '' : 'lightblue'}\n            />\n        </FormControls>\n    );\n};\n\nexport const createField = (placeholder, name, validate, component, type, text = '') => (\n    <RememberMe>\n        <Field placeholder={placeholder} name={name} validate={validate} component={component} type={type} />\n        {text}\n    </RememberMe>\n);\n","export const required = (value) => {\n    if (value) return undefined;\n    return 'Field is required';\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n};\n","import { ProfileAPI, usersAPI } from '../api/api';\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\n\nlet initialState = {\n    postData: [\n        {\n            id: 1,\n            img: 'https://st.depositphotos.com/2000885/1902/i/450/depositphotos_19021343-stock-photo-red-heart.jpg',\n            message: 'Hello, my name is Misha',\n            likesCount: 13\n        },\n        {\n            id: 2,\n            img: 'https://st.depositphotos.com/2000885/1902/i/450/depositphotos_19021343-stock-photo-red-heart.jpg',\n            message: \"It's my first project\",\n            likesCount: 200\n        },\n        {\n            id: 3,\n            img: 'https://st.depositphotos.com/2000885/1902/i/450/depositphotos_19021343-stock-photo-red-heart.jpg',\n            message: 'Hello world',\n            likesCount: 400\n        }\n    ],\n    profile: null,\n    status: ''\n};\n\nconst profileReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: 4,\n                img: 'https://st.depositphotos.com/2000885/1902/i/450/depositphotos_19021343-stock-photo-red-heart.jpg',\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                postData: [newPost, ...state.postData]\n            };\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            };\n        case SET_STATUS:\n            return {\n                ...state,\n                status: action.status\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const addPostActionCreator = (newPostText) => ({\n    type: ADD_POST,\n    newPostText\n});\nexport const setUserProfile = (profile) => ({\n    type: SET_USER_PROFILE,\n    profile\n});\nexport const setStatus = (status) => ({\n    type: SET_STATUS,\n    status\n});\n\nexport const getUserProfile = (userId) => (dispatch) => {\n    usersAPI.getProfile(userId).then((data) => {\n        dispatch(setUserProfile(data));\n    });\n};\nexport const getStatus = (userId) => async (dispatch) => {\n    let data = await ProfileAPI.getStatus(userId);\n    dispatch(setStatus(data));\n};\nexport const updateStatus = (status) => async (dispatch) => {\n    let data = await ProfileAPI.updateStatus(status);\n    if (data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n};\n\nexport default profileReduser;\n"],"sourceRoot":""}