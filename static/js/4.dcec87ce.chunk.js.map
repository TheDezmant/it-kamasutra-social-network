{"version":3,"sources":["components/Content/Profile/units.js","components/Content/Profile/MyPost/Post/Post.js","components/Content/Profile/MyPost/MyPost.js","components/Content/Profile/MyPost/MyPostContainer.js","components/Content/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Content/Profile/ProfileInfo/ProfileInfo.js","components/Content/Profile/Profile.js","components/Content/Profile/ProfileContainer.js"],"names":["StyledProfile","styled","div","Post","props","src","img","width","height","text","like","MyPost","React","memo","console","log","postsElements","posts","map","x","message","likesCount","createRef","AddPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","MyPostContainer","connect","state","profile","postData","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileInfo","alt","photos","large","aboutMe","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.dcec87ce.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nconst StyledProfile = styled.div`\r\n    width: 100%;\r\n    background-color: aqua;\r\n`;\r\n\r\nconst AddPost = styled.div`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport { StyledProfile, AddPost };\r\n","import React from 'react';\n\nconst Post = (props) => {\n    return (\n        <div>\n            <img src={props.img} width=\"50px\" height=\"50px\" />\n            {props.text}\n            <div>\n                <span>like</span>\n                {props.like}\n            </div>\n        </div>\n    );\n};\n\nexport default Post;\n","import React from 'react';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../../utils/validators/validators';\nimport { Textarea } from '../../../common/FormsControls/FormControls';\n\nconst MyPost = React.memo((props) => {\n    console.log('Render');\n    let postsElements = props.posts.map((x) => <Post img={x.img} text={x.message} like={x.likesCount} />);\n\n    let newPostElement = React.createRef();\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    };\n\n    return (\n        <div>\n            <div>My post</div>\n            <AddPostFormRedux onSubmit={onAddPost} />\n            {postsElements}\n        </div>\n    );\n});\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} />\n            </div>\n            <button> add post</button>\n        </form>\n    );\n};\n\nconst AddPostFormRedux = reduxForm({\n    form: 'profileAddPostForm'\n})(AddPostForm);\n\nexport default MyPost;\n","import { connect } from 'react-redux';\nimport MyPost from './MyPost';\nimport { addPostActionCreator, updateNewPostChenge } from '../../../../redux/profile-reducer';\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profile.postData,\n        newPostText: state.profile.newPostText\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    };\n};\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\n\nexport default MyPostContainer;\n","import React, { useEffect, useState } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateMode = () => {\n        setEditMode(true);\n    };\n    const deactivateMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            {!editMode && (\n                <div>\n                    <span onDoubleClick={activateMode}>{props.status || '-------'}</span>\n                </div>\n            )}\n            {editMode && (\n                <div>\n                    <input autoFocus={true} onChange={onStatusChange} onBlur={deactivateMode} value={status} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from 'react';\nimport Preloader from '../../../common/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = (props) => {\n    if (!props.profile) {\n        return <Preloader />;\n    }\n\n    return (\n        <div>\n            <div>\n                <img src=\"https://ktonanovenkogo.ru/image/priroda-gora.jpg\" alt=\"\" />\n            </div>\n            <div>\n                <img src={props.profile.photos.large} />\n                {props.profile.aboutMe}\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\n            </div>\n        </div>\n    );\n};\n\nexport default ProfileInfo;\n","import React from 'react';\nimport { StyledProfile } from './units';\nimport MyPostContainer from './MyPost/MyPostContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n    return (\n        <StyledProfile>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n            <MyPostContainer />\n        </StyledProfile>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getStatus, getUserProfile, updateStatus } from '../../../redux/profile-reducer';\nimport Profile from './Profile';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login');\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <Profile\n                {...this.props}\n                profile={this.props.profile}\n                status={this.props.status}\n                updateStatus={this.props.updateStatus}\n            />\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profile.profile,\n    status: state.profile.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n    withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}